Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o (exit)
/usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
                              48Code.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

readTwiBuffer       0x2               48Code.o
uart_tx_buf         0x28              uart_functions_m48.o
twi_state           0x1               twi_master.o
twi_buf             0x2               twi_master.o
strBuffer           0xa               48Code.o
twi_bus_addr        0x1               twi_master.o
twi_msg_size        0x1               twi_master.o
celsius             0x2               48Code.o
uart_rx_buf         0x28              uart_functions_m48.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o
LOAD 48Code.o
LOAD twi_master.o
LOAD uart_functions_m48.o
START GROUP
LOAD /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/libatmega48.a
END GROUP
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x394
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000034       0xa2 twi_master.o
                0x00000000000000d6                . = ALIGN (0x2)
                0x00000000000000d6                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000d6        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000d6                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x00000000000000d6                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000d6                __ctors_start = .
 *(.ctors)
                0x00000000000000d6                __ctors_end = .
                0x00000000000000d6                __dtors_start = .
 *(.dtors)
                0x00000000000000d6                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000d6        0x0 /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o
                0x00000000000000d6                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000d6        0xc /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000e2       0x10 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000e2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000f2        0x4 /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o
 *(.init9)
 *(.text)
 .text          0x00000000000000f6        0x2 /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o
                0x00000000000000f6                __vector_22
                0x00000000000000f6                __vector_1
                0x00000000000000f6                __vector_12
                0x00000000000000f6                __bad_interrupt
                0x00000000000000f6                __vector_6
                0x00000000000000f6                __vector_3
                0x00000000000000f6                __vector_23
                0x00000000000000f6                __vector_25
                0x00000000000000f6                __vector_11
                0x00000000000000f6                __vector_13
                0x00000000000000f6                __vector_17
                0x00000000000000f6                __vector_19
                0x00000000000000f6                __vector_7
                0x00000000000000f6                __vector_5
                0x00000000000000f6                __vector_4
                0x00000000000000f6                __vector_9
                0x00000000000000f6                __vector_2
                0x00000000000000f6                __vector_21
                0x00000000000000f6                __vector_15
                0x00000000000000f6                __vector_8
                0x00000000000000f6                __vector_14
                0x00000000000000f6                __vector_10
                0x00000000000000f6                __vector_16
                0x00000000000000f6                __vector_18
                0x00000000000000f6                __vector_20
 .text          0x00000000000000f8        0x0 48Code.o
 .text          0x00000000000000f8      0x172 twi_master.o
                0x00000000000000f8                __vector_24
                0x000000000000020c                twi_busy
                0x0000000000000214                twi_start_wr
                0x0000000000000236                twi_start_rd
                0x0000000000000258                init_twi
 .text          0x000000000000026a       0xac uart_functions_m48.o
                0x000000000000026a                uart_putc
                0x0000000000000280                uart_puts
                0x00000000000002a6                uart_puts_p
                0x00000000000002da                uart_init
                0x00000000000002fa                uart_getc
 .text          0x0000000000000316        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000316        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000316                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000316       0x7a 48Code.o
                0x0000000000000316                main
 .text.libgcc.mul
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000390                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000390        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
                0x0000000000000390                exit
                0x0000000000000390                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000390        0x4 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000394                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000000394
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o
 .data          0x0000000000800100        0x0 48Code.o
 .data          0x0000000000800100        0x0 twi_master.o
 .data          0x0000000000800100        0x0 uart_functions_m48.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800100       0x65
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o
 .bss           0x0000000000800100        0x1 48Code.o
                0x0000000000800100                flag
 .bss           0x0000000000800101        0x1 twi_master.o
 .bss           0x0000000000800102        0x0 uart_functions_m48.o
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800102        0xe 48Code.o
                0x0000000000800102                readTwiBuffer
                0x0000000000800104                strBuffer
                0x000000000080010e                celsius
 COMMON         0x0000000000800110        0x5 twi_master.o
                0x0000000000800110                twi_state
                0x0000000000800111                twi_buf
                0x0000000000800113                twi_bus_addr
                0x0000000000800114                twi_msg_size
 COMMON         0x0000000000800115       0x50 uart_functions_m48.o
                0x0000000000800115                uart_tx_buf
                0x000000000080013d                uart_rx_buf
                0x0000000000800165                PROVIDE (__bss_end, .)
                0x0000000000000394                __data_load_start = LOADADDR (.data)
                0x0000000000000394                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800165        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800165                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x159c
 *(.stab)
 .stab          0x0000000000000000      0x6a8 48Code.o
 .stab          0x00000000000006a8      0x804 twi_master.o
                                        0x87c (size before relaxing)
 .stab          0x0000000000000eac      0x5d0 uart_functions_m48.o
                                        0x7ec (size before relaxing)
 .stab          0x000000000000147c       0x6c /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000014e8       0xb4 /usr/lib/gcc/avr/6.2.0/avr4/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000     0x198f
 *(.stabstr)
 .stabstr       0x0000000000000000     0x198f 48Code.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x42
 *(.comment)
 .comment       0x0000000000000000       0x21 48Code.o
                                         0x22 (size before relaxing)
 .comment       0x0000000000000021       0x21 twi_master.o
                                         0x22 (size before relaxing)
 .comment       0x0000000000000042       0x22 uart_functions_m48.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x5f4
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o

.debug_abbrev   0x0000000000000000      0x5a2
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x209
 *(.debug_str)
 .debug_str     0x0000000000000000      0x209 /usr/lib/gcc/avr/6.2.0/../../../../avr/lib/avr4/crtatmega48.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(48Code.c.elf elf32-avr)
LOAD linker stubs
